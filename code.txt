


db:
module.exports.getEmAll = () => {
    return db.query(`SELECT 
    users.id AS user_id, users.first AS first, users.last AS last, users.email AS email, user_profiles.age AS age, user_profiles.city AS city, user_profiles.url AS url, signers.sign AS sign
FROM users 
FULL OUTER JOIN signers
ON signers.user_id = users.id
FULL OUTER JOIN user_profiles
ON signers.user_id = user_profiles.user_id;`);
};


/*
module.exports.deleteSignature = (id) => {
    return db.query(`DELETE FROM signers WHERE user_id = $1`, [id]);
};
*/


//////////////////edits///////////////////////////////

module.exports.editGet = (id) => {
    return db.query(
        `SELECT 
    users.first, users.last, users.email, user_profiles.age, user_profiles.city, user_profiles.url
    FROM signers 
    LEFT JOIN users
    ON signers.user_id = users.id
    JOIN user_profiles
    ON signers.user_id = user_profiles.user_id
    WHERE users.id = $1
    `,
        [id]
    );
};
//////////////////edit without password change///////////////////////////////

module.exports.editUsers = (id, first, last, email) => {
    return db.query(
        `
    UPDATE users SET first = $2, last = $3, email = $4 
    WHERE users.id = $1
    `,
        [id, first, last, email]
    );
};

module.exports.editProfiles = (id, age, city, url) => {
    return db.query(
        `
    INSERT INTO user_profiles (user_id, age, city, url)
    VALUES ($1, $2, $3, $4)
    ON CONFLICT (user_id)
    DO UPDATE SET age = $2, city = $3, url = $4
    `,
        [id, age, city, url]
    );
};

//////////////////edit with password change///////////////////////////////
module.exports.editUsersWithPw = (id, first, last, email, password) => {
    return db.query(
        `
    UPDATE users SET first = $2, last = $3, email = $4, password = $5
    WHERE users.id = $1
    `,
        [id, first, last, email, password]
    );
};

module.exports.editProfilesPwChanged = (id, age, city, url) => {
    return db.query(
        `
    INSERT INTO user_profiles (user_id, age, city, url)
    VALUES ($1, $2, $3, $4)
    ON CONFLICT (user_id)
    DO UPDATE SET age = $2, city = $3, url = $4
    `,
        [id, age, city, url]
    );
};



----------------------------------------------------------------------------------------------
index.js

/*
app.post("/signed", (req, res) => {
    console.log("button was pushed!");
    let user_id = req.session.userId;
    console.log(user_id);

    db.deleteSignature(user_id)
        .then((results) => {
            console.log(results);
            //req.session.signed = "signed!";
            //console.log("req.session: ", req.session);

            //res.redirect("/signed");
        })
        .catch((err) => {
            console.log("err in deleteSignature: ", err);
        });
});
*/



//////////////////////////////edit////////////////////////////////////////
app.get("/edit", (req, res) => {
    //console.log("get request to edit route happend!!!");
    if (!req.session.signed) {
        res.redirect("/petition");
    } else {
        let user_id = req.session.userId;
        db.editGet(user_id)
            .then(({ rows }) => {
                //console.log("rows in getEdit", rows);
                res.render("edit", {
                    rows: rows,
                });
            })
            .catch((err) => {
                console.log("err in editGet: ", err);
            }); //closes error; //closes editGet
    } //closes else
});

app.post("/edit", (req, res) => {
    console.log("post request to edit route happend!!!");
    let user_id = req.session.userId;
    console.log(user_id);
    console.log(req.body);
    let first = req.body.first;
    //console.log("1", first);
    let last = req.body.last;
    //console.log("2", last);
    let email = req.body.email;
    //console.log("email", email);
    let pw = req.body.password;
    console.log("pw", pw);
    let age = req.body.age;
    //console.log("age", age);
    let city = req.body.city;
    //console.log("city", city);
    let url = req.body.url;
    //console.log("url", url);
    let hash;

    if (pw == "") {
        console.log("password did not get changed");
        db.editUsers(user_id, first, last, email)
            .then(() => {
                db.editProfiles(user_id, age, city, url)
                    .then((results) => {
                        //console.log(results);
                        //console.log("this worked!!!");
                        res.redirect("/signed");
                    })
                    .catch((err) => {
                        console.log("err in editProfiles: ", err);
                    }); //closes error; //closes editGet
            })
            .catch((err) => {
                console.log("err in editUsers: ", err);
            }); //closes error; //closes editGet
    } else {
        console.log("password did change!");
        console.log(pw);
        hast = pw;
        bc.hash(req.body.password).then((salted) => {
            console.log("salted pw: ", salted);

            db.editUsersWithPw(user_id, first, last, email, salted)
                .then(() => {
                    //console.log("this worked!!");
                    db.editProfilesPwChanged(user_id, age, city, url)
                        .then((results) => {
                            console.log(results);
                            console.log("this worked!!!");
                            //res.redirect("/signed");
                        })
                        .catch((err) => {
                            console.log("err in editProfiles: ", err);
                        }); //closes error; //closes editGet
                })
                .catch((err) => {
                    console.log("err in edit users with password: ", err);
                });
        });
    }

    //console.log("req.session: ", req.session);

    //console.log("req.session after adding something: ", req.session);
});



---------------------------------------------------------------------------
